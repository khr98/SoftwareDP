$git init
Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/

$git config --global user.name "hyerim Kim"

$git config --global user.email hyerim980513@gmail.com

$git config --list
user.name=hyerim Kim
user.email=hyerim980513@gmail.com

$git config --global core.editor "vim"

$git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

$git help -h
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

$git add softwaredp.txt

$git commit -m "tutorial"

$git clone git@github.com:khr98/SoftwareDP.git

$git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   softwaredp.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)

$git status -s | git status --short
AM softwaredp.txt

$git diff
diff --git a/softwaredp.txt b/softwaredp.txt
index e54ba32..c11c0bb 100644
--- a/softwaredp.txt
+++ b/softwaredp.txt
@@ -1,17 +1,17 @@
-1. git init
+-> git init
 Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/

-2. git config --global user.name "hyerim Kim"
+-> git config --global user.name "hyerim Kim"

-3. git config --global user.email hyerim980513@gmail.com
+-> git config --global user.email hyerim980513@gmail.com

-4. git config --list
+-> git config --list
 user.name=hyerim Kim
 user.email=hyerim980513@gmail.com

-5.git config --global core.editor "vim"
+-> git config --global core.editor "vim"

-6.git help

$git diff --staged
diff --git a/softwaredp.txt b/softwaredp.txt
new file mode 100644
index 0000000..e54ba32
--- /dev/null
+++ b/softwaredp.txt
@@ -0,0 +1,83 @@
+1. git init
+Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/
+
+2. git config --global user.name "hyerim Kim"
+
+3. git config --global user.email hyerim980513@gmail.com
+
+4. git config --list
+user.name=hyerim Kim
+user.email=hyerim980513@gmail.com
+
+5.git config --global core.editor "vim"
+
+6.git help
+usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
+           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
+           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
+           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]

$git diff --cached
diff --git a/softwaredp.txt b/softwaredp.txt
new file mode 100644
index 0000000..e54ba32
--- /dev/null
+++ b/softwaredp.txt
@@ -0,0 +1,83 @@
+1. git init
+Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/
+
+2. git config --global user.name "hyerim Kim"
+
+3. git config --global user.email hyerim980513@gmail.com
+
+4. git config --list
+user.name=hyerim Kim
+user.email=hyerim980513@gmail.com
+
+5.git config --global core.editor "vim"
+
+6.git help
+usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
+           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
+           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
+           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]

$rm test.txt
$git status 
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   git.txt
	new file:   test.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	deleted:    test.txt

$git commit -m "test"
[master (root-commit) 3a08c0c] test
 2 files changed, 202 insertions(+)
 create mode 100644 git.txt
 create mode 100644 test2.txt

$git log
commit 3a08c0c056567d0cfd8554a8430f4ea1079f7e43 (HEAD -> master)
Author: hyerim Kim <hyerim980513@gmail.com>
Date:   Thu Sep 23 20:22:19 2021 +0900

    test

$git log --pretty=oneline
3a08c0c056567d0cfd8554a8430f4ea1079f7e43 (HEAD -> master) test

$git commit --amend
test
  2
  3 # Please enter the commit message for your changes. Lines starting
  4 # with '#' will be ignored, and an empty message aborts the commit.
  5 #
  6 # Date:      Thu Sep 23 20:22:19 2021 +0900
  7 #
  8 # On branch master
  9 #
 10 # Initial commit
 11 #
 12 # Changes to be committed:
 13 #       new file:   git.txt
 14 #       new file:   test2.txt
 15 #
 16 # Changes not staged for commit:
 17 #       modified:   git.txt
 18 #

$git add *
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   a.txt
	new file:   b.txt
	modified:   git.txt

$git remote
origin

$git remote -v
origin	git@github.com:khr98/SoftwareDP.git (fetch)
origin	git@github.com:khr98/SoftwareDP.git (push)

$git remote add origin git@github.com:khr98/SoftwareDP.git

$git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 16 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 2.28 KiB | 2.28 MiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:khr98/SoftwareDP.git
 * [new branch]      master -> master

$git remote show origin
* remote origin
  Fetch URL: git@github.com:khr98/SoftwareDP.git
  Push  URL: git@github.com:khr98/SoftwareDP.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (up to date)

$git tag -a v1.4 -m "my version 1.4"
$git tag
v1.4

$git show v1.4
tag v1.4
Tagger: hyerim Kim <hyerim980513@gmail.com>
Date:   Thu Sep 23 21:03:22 2021 +0900

my version 1.4

commit 4d1f1c905f3646c2403c8b547dfaceba201f4f15 (HEAD -> master, tag: v1.4, origin/master)
Author: hyerim Kim <hyerim980513@gmail.com>
Date:   Thu Sep 23 20:22:19 2021 +0900

    test

$git tag v1.4-lw
$git tag
v1.4
v1.4-lw

$git show v1.4-lw
commit 4d1f1c905f3646c2403c8b547dfaceba201f4f15 (HEAD -> master, tag: v1.4-lw, tag: v1.4, origin/master)
Author: hyerim Kim <hyerim980513@gmail.com>
Date:   Thu Sep 23 20:22:19 2021 +0900

    test

$git push origin --tags
Enumerating objects: 1, done.
Counting objects: 100% (1/1), done.
Writing objects: 100% (1/1), 163 bytes | 163.00 KiB/s, done.
Total 1 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:khr98/SoftwareDP.git
 * [new tag]         v1.4 -> v1.4
 * [new tag]         v1.4-lw -> v1.4-lw

$git checkout v1.4
M	git.txt
D	test2.txt
Note: switching to 'v1.4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 4d1f1c9 test

$git config --global alias.last 'log -1 HEAD'

$git last
commit 4d1f1c905f3646c2403c8b547dfaceba201f4f15 (HEAD -> master, origin/master)
Author: hyerim Kim <hyerim980513@gmail.com>
Date:   Thu Sep 23 20:22:19 2021 +0900

    test


