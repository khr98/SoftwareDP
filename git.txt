$git init
Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/

$git config --global user.name "hyerim Kim"

$git config --global user.email hyerim980513@gmail.com

$git config --list
user.name=hyerim Kim
user.email=hyerim980513@gmail.com

$git config --global core.editor "vim"

$git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

$git help -h
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

$git add softwaredp.txt

$git commit -m "tutorial"

$git clone git@github.com:khr98/SoftwareDP.git

$git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   softwaredp.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)

$git status -s | git status --short
AM softwaredp.txt

$git diff
diff --git a/softwaredp.txt b/softwaredp.txt
index e54ba32..c11c0bb 100644
--- a/softwaredp.txt
+++ b/softwaredp.txt
@@ -1,17 +1,17 @@
-1. git init
+-> git init
 Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/

-2. git config --global user.name "hyerim Kim"
+-> git config --global user.name "hyerim Kim"

-3. git config --global user.email hyerim980513@gmail.com
+-> git config --global user.email hyerim980513@gmail.com

-4. git config --list
+-> git config --list
 user.name=hyerim Kim
 user.email=hyerim980513@gmail.com

-5.git config --global core.editor "vim"
+-> git config --global core.editor "vim"

-6.git help

$git diff --staged
diff --git a/softwaredp.txt b/softwaredp.txt
new file mode 100644
index 0000000..e54ba32
--- /dev/null
+++ b/softwaredp.txt
@@ -0,0 +1,83 @@
+1. git init
+Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/
+
+2. git config --global user.name "hyerim Kim"
+
+3. git config --global user.email hyerim980513@gmail.com
+
+4. git config --list
+user.name=hyerim Kim
+user.email=hyerim980513@gmail.com
+
+5.git config --global core.editor "vim"
+
+6.git help
+usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
+           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
+           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
+           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]

$git diff --cached
diff --git a/softwaredp.txt b/softwaredp.txt
new file mode 100644
index 0000000..e54ba32
--- /dev/null
+++ b/softwaredp.txt
@@ -0,0 +1,83 @@
+1. git init
+Initialized empty Git repository in /Users/hyerim/SoftwareDP/.git/
+
+2. git config --global user.name "hyerim Kim"
+
+3. git config --global user.email hyerim980513@gmail.com
+
+4. git config --list
+user.name=hyerim Kim
+user.email=hyerim980513@gmail.com
+
+5.git config --global core.editor "vim"
+
+6.git help
+usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
+           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
+           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
+           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]

$rm test.txt
$git status 
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   git.txt
	new file:   test.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	deleted:    test.txt



